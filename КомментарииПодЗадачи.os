#Использовать cmdline
#Использовать restler

Перем ИмяФайлаШаблона;
Перем юсПарсер;
Перем юсПараметры;

Процедура ЗадатьНачальныеНастройки()
	юсПарсер = Новый ПарсерАргументовКоманднойСтроки();
	юсПараметры = ЗаполнитьПараметры();
	
	Если АргументыКоманднойСтроки.Количество() = 0 Тогда
		юсСообщить("ERROR", "Не заданы аргументы командной строки!");
		ЗавершитьРаботу(1);
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаполнитьПараметры()
	
	юсПарсер.ДобавитьИменованныйПараметр("/P"); // Путь к файлу шаблонов
	юсПарсер.ДобавитьИменованныйПараметр("/T"); // Токен битрикс 24
	юсПарсер.ДобавитьИменованныйПараметр("/U"); // ID пользователя битрикс 24
	
	
	Возврат юсПарсер.Разобрать(АргументыКоманднойСтроки);
	
КонецФункции

Процедура юсСообщить(ТипСообщения, ТекстСообщения)
	
	ИмяЛогФайла = юсПараметры["/LOG"];
	ТекстСообщения = "[" + ТекущаяДата() + "] " + "[" + ТипСообщения + "] " + ТекстСообщения;
	
	Если ЗначениеЗаполнено(ИмяЛогФайла) Тогда
		ВЛогФайл(ИмяЛогФайла, ТекстСообщения);
	Иначе
		Сообщить(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВЛогфайл(ИмяФайла, ТекстСообщения)
	
	Если Найти(ИмяФайла, "\") = 0 Тогда
		ИмяФайла = КаталогПрограммы() + ИмяФайла;
		Сообщить("Лог:" + ИмяФайла);
	КонецЕсли;
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	Кодировка = "UTF-8";
	юсРазделительСтрок = Символы.ВК + Символы.ПС;
	
	МассивФайлов = НайтиФайлы(ИмяФайла);
	// если файл еще не создан добавим строку
	Если МассивФайлов.Количество() = 0 Тогда
		ТекстовыйДокумент.ДобавитьСтроку(ТекстСообщения);
	Иначе
		// если файл с таким именем уже создан прочитаем его
		ТекстовыйДокумент.Прочитать(ИмяФайла, Кодировка);
		ТекстовыйДокумент.ДобавитьСтроку(ТекстСообщения);
	КонецЕсли;
	// закрываем ТекстовыйДокумент файл
	ТекстовыйДокумент.Записать(ИмяФайла, Кодировка);
	
КонецПроцедуры

Процедура ПолучитьСтрокуЗадач() // &filter[REAL_STATUS]=5
	Токен = юсПараметры["/T"]; // 3d361t7rnvn5guqk
	ID = юсПараметры["/U"]; // 13083	
	
	Соединение = Новый HTTPСоединение("https://b24.esteam.band", 443);
	
	Клиент = Новый КлиентВебAPI();
	Клиент.ИспользоватьСоединение(Соединение);
	Запрос = "/rest/13083/" + Токен + "/tasks.task.list?filter[RESPONSIBLE_ID]=" + ID + "&filter[REAL_STATUS]=5&select[0]=ID&select[1]=TITLE";
	Результат = Клиент.Получить(Запрос);
	
	БлокЗамены = "<?""""Шо за задача?"""", ВыборВарианта";
	Для каждого Элемент Из Результат["result"]["tasks"] Цикл
		БлокЗамены = БлокЗамены + ", " + """""" + Элемент["title"] + """""" + ", " + """""" + Элемент["id"] + """""";
	КонецЦикла;
	БлокЗамены = БлокЗамены + ">";
	
	юсПараметры.Вставить("блок", БлокЗамены);
КонецПроцедуры

Функция НужноОбработатьСтроку(текСтрока)
	Если СтрНачинаетсяС(текСтрока, "{""Фрагмент добавлен"",")
		ИЛИ СтрНачинаетсяС(текСтрока, "{""Фрагмент удален"",")
		ИЛИ СтрНачинаетсяС(текСтрока, "{""Фрагмент ИЗМЕНЕН"",") Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции
Процедура ОбновитьШаблон()
	
	ИмяФайлаШаблона = юсПараметры["/P"];
	БлокЗамены = юсПараметры["блок"];
	
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать(ИмяФайлаШаблона);
	Для а = 0 По ТекстДок.КоличествоСтрок() Цикл
		позицияНач = 0;
		КонецБлока = 0;
		текСтрока = ТекстДок.ПолучитьСтроку(а);
		Если НужноОбработатьСтроку(текСтрока) Тогда
			
			Пока СтрНайти(текСтрока, "<?", , позицияНач) <> 0 Цикл
				НачалоБлока = СтрНайти(текСтрока, "<?", , позицияНач);
				КонецБлока = СтрНайти(текСтрока, ">", , НачалоБлока);
				Если НачалоБлока = 0 ИЛИ КонецБлока = 1 Тогда
					позицияНач = КонецБлока;
					Продолжить;
				КонецЕсли;
				блок = Сред(текСтрока, НачалоБлока, КонецБлока - НачалоБлока + 1);
				Если СтрНайти(блок, " ВыборВарианта,") > 0 Тогда
					НоваяСтрока = СтрЗаменить(текСтрока, блок, БлокЗамены);
					ТекстДок.ЗаменитьСтроку(а, НоваяСтрока);
					Прервать;
				КонецЕсли;
				позицияНач = КонецБлока;
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстДок.Записать(ИмяФайлаШаблона);
КонецПроцедуры

ЗадатьНачальныеНастройки();
ПолучитьСтрокуЗадач();
ОбновитьШаблон();